{
    "version": "2.0.0",
    "tasks": [
      {
        "type": "shell",
        "command": "flutter",
        "args": [
          "pub",
          "run",
          "build_runner",
          "clean"
        ],
        "problemMatcher": [
          "$dart-build_runner"
        ],
        "group": "build",
        "label": "build_runner: clean",
        "detail": "",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "dedicated",
          "showReuseMessage": true,
          "clear": false,
          "close": true
        }
      },
      {
        "type": "shell",
        "command": "flutter",
        "args": [
          "pub",
          "run",
          "build_runner",
          "watch",
          "--delete-conflicting-outputs"
        ],
        "problemMatcher": [
          "$dart-build_runner"
        ],
        "group": "build",
        "label": "build_runner: watch",
        "detail": "",
        "isBackground": true,
      },
      {
        "type": "shell",
        "command": "flutter",
        "args": [
          "pub",
          "run",
          "build_runner",
          "build",
          "--delete-conflicting-outputs"
        ],
        "problemMatcher": [
          "$dart-build_runner"
        ],
        "group": "build",
        "label": "build_runner: build",
        "detail": ""
      },
      {
        "label": "build_runner: clean and watch",
        "dependsOrder": "sequence",
        "dependsOn": [
          "build_runner: clean",
          "build_runner: build",
          "build_runner: watch"
        ],
      },
      {
        "type": "shell",
        "label": "clean cache: removed .build and .dart_tool",
        "command": "bash",
        "args": [
          "-c",
          "if [[ \"$OSTYPE\" == \"darwin\"* ]]; then rm -rf .build .dart_tool; elif [[ \"$OSTYPE\" == \"cygwin\" || \"$OSTYPE\" == \"msys\" || \"$OSTYPE\" == \"win32\" ]]; then rmdir /s /q .build .dart_tool; else echo \"Unsupported OS\"; fi"
        ],
        "problemMatcher": [],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "dedicated",
          "showReuseMessage": true,
          "clear": false,
          "close": true
        }
      },
      {
        "label": "Terminate All Tasks",
        "command": "echo ${input:terminate}",
        "type": "shell",
        "problemMatcher": []
      }
    ],
    "inputs": [
      {
        "id": "terminate",
        "type": "command",
        "command": "workbench.action.tasks.terminate",
        "args": "terminateAll"
      }
    ]
  }